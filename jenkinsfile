node {
    def app

    stage('Clone Repo') {
      checkout scm
    }

    stage('Environment') {
      sh 'git --version'
      echo "Branch: ${env.BRANCH_NAME}"
      sh 'docker -v'
      sh 'printenv'
    }

    stage('Build and push Docker Image'){

        app= docker.build("securecom2023/immo:${env.BUILD_NUMBER}")
         docker.withRegistry('', 'dockerhub') {

        def customImage = docker.build("securecom2023/immo:${env.BUILD_ID}")

        /* Push the container to the custom Registry */
        customImage.push()
      }
     echo "image built successfully"
    }

    stage('Remove Unused docker image'){

      steps{
        sh "docker rmi securecom2023/immo:$BUILD_NUMBER"
      }
    }
 

    stage ('Trigger Update Manifest') {
           
            echo "Triggering Update Manifest Job"
            build job: 'immo-manifest', parameters: [string(name: 'DOCKERTAG', value: env.BUILD_NUMBER)]
                
        }

}
